(function(){"use strict";var __webpack_modules__={517:function(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__){eval('\n// EXTERNAL MODULE: ./src/styles/index.scss\nvar styles = __webpack_require__(713);\n;// CONCATENATED MODULE: ./src/modules/TaskTrackerAPI.ts\nfunction _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator.return && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a \'" + n + "\' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }\nvar TaskTrackerAPI = /*#__PURE__*/function () {\n  function TaskTrackerAPI(localTaskTracker) {\n    _classCallCheck(this, TaskTrackerAPI);\n    this.localTaskTracker = localTaskTracker;\n  }\n  _createClass(TaskTrackerAPI, [{\n    key: "getTaskById",\n    value: function () {\n      var _getTaskById = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(taskId) {\n        var tasks;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.localTaskTracker.getTasks();\n            case 2:\n              tasks = _context.sent;\n              return _context.abrupt("return", tasks.find(function (task) {\n                return task.id === taskId;\n              }) || null);\n            case 4:\n            case "end":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function getTaskById(_x) {\n        return _getTaskById.apply(this, arguments);\n      }\n      return getTaskById;\n    }()\n  }, {\n    key: "deleteTask",\n    value: function () {\n      var _deleteTask = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(taskId) {\n        var success, task;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.localTaskTracker.deleteTask(taskId);\n            case 2:\n              success = _context2.sent;\n              if (!success) {\n                _context2.next = 7;\n                break;\n              }\n              _context2.next = 6;\n              return this.getTaskById(taskId);\n            case 6:\n              task = _context2.sent;\n            case 7:\n              return _context2.abrupt("return", success);\n            case 8:\n            case "end":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function deleteTask(_x2) {\n        return _deleteTask.apply(this, arguments);\n      }\n      return deleteTask;\n    }()\n  }, {\n    key: "getSavedTasks",\n    value: function () {\n      var _getSavedTasks = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var savedTasks;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return this.localTaskTracker.getTasks();\n            case 2:\n              savedTasks = _context3.sent;\n              return _context3.abrupt("return", _toConsumableArray(savedTasks));\n            case 4:\n            case "end":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function getSavedTasks() {\n        return _getSavedTasks.apply(this, arguments);\n      }\n      return getSavedTasks;\n    }()\n  }, {\n    key: "saveTask",\n    value: function () {\n      var _saveTask = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(task) {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!(task.text === \'\')) {\n                _context4.next = 2;\n                break;\n              }\n              return _context4.abrupt("return");\n            case 2:\n              _context4.next = 4;\n              return this.localTaskTracker.setTask(task);\n            case 4:\n            case "end":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function saveTask(_x3) {\n        return _saveTask.apply(this, arguments);\n      }\n      return saveTask;\n    }()\n  }, {\n    key: "taskFilter",\n    value: function taskFilter(task, filter) {\n      var _filter$tags$map, _filter$tags;\n      var tagsToCompare = (_filter$tags$map = (_filter$tags = filter.tags) === null || _filter$tags === void 0 ? void 0 : _filter$tags.map(function (tag) {\n        return tag.trim().toLowerCase();\n      })) !== null && _filter$tags$map !== void 0 ? _filter$tags$map : [];\n      var dateMatches = !filter.date || task.date === filter.date;\n      var statusMatches = !filter.status || task.status === filter.status;\n      var tagsMatches = tagsToCompare.length === 0 || tagsToCompare.some(function (filterTag) {\n        return task.tags.some(function (taskTag) {\n          return taskTag.toLowerCase().includes(filterTag);\n        });\n      });\n      return dateMatches && statusMatches && tagsMatches;\n    }\n  }, {\n    key: "generateTaskId",\n    value: function generateTaskId() {\n      var currentDate = new Date();\n      var randomPart = Math.random().toString(36).substring(2, 15);\n      var timestampPart = currentDate.getTime().toString(36);\n      return "".concat(timestampPart, "-").concat(randomPart);\n    }\n  }]);\n  return TaskTrackerAPI;\n}();\n;// CONCATENATED MODULE: ./src/modules/store.ts\nfunction store_typeof(o) { "@babel/helpers - typeof"; return store_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, store_typeof(o); }\nfunction store_regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ store_regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == store_typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator.return && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a \'" + n + "\' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(store_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }\nfunction store_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction store_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { store_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { store_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\nfunction store_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction store_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, store_toPropertyKey(descriptor.key), descriptor); } }\nfunction store_createClass(Constructor, protoProps, staticProps) { if (protoProps) store_defineProperties(Constructor.prototype, protoProps); if (staticProps) store_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction store_toPropertyKey(t) { var i = store_toPrimitive(t, "string"); return "symbol" == store_typeof(i) ? i : String(i); }\nfunction store_toPrimitive(t, r) { if ("object" != store_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != store_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }\nvar WorkWithLocalStorage = /*#__PURE__*/function () {\n  function WorkWithLocalStorage(namespace) {\n    store_classCallCheck(this, WorkWithLocalStorage);\n    this.namespace = namespace;\n  }\n  store_createClass(WorkWithLocalStorage, [{\n    key: "getTasks",\n    value: function () {\n      var _getTasks = store_asyncToGenerator( /*#__PURE__*/store_regeneratorRuntime().mark(function _callee(taskFilter) {\n        var _this = this;\n        var tasks;\n        return store_regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.getTasksFromLocalStorage();\n            case 2:\n              tasks = _context.sent;\n              if (taskFilter) {\n                _context.next = 5;\n                break;\n              }\n              return _context.abrupt("return", tasks);\n            case 5:\n              return _context.abrupt("return", tasks.filter(function (task) {\n                return _this.taskFilter(task, taskFilter);\n              }));\n            case 6:\n            case "end":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function getTasks(_x) {\n        return _getTasks.apply(this, arguments);\n      }\n      return getTasks;\n    }()\n  }, {\n    key: "taskFilter",\n    value: function taskFilter(task, filter) {\n      var _filter$tags$map, _filter$tags;\n      var tagsToCompare = (_filter$tags$map = (_filter$tags = filter.tags) === null || _filter$tags === void 0 ? void 0 : _filter$tags.map(function (tag) {\n        return tag.trim().toLowerCase();\n      })) !== null && _filter$tags$map !== void 0 ? _filter$tags$map : [];\n      var dateMatches = !filter.date || task.date === filter.date;\n      var statusMatches = !filter.status || task.status === filter.status;\n      var tagsMatches = tagsToCompare.length === 0 || tagsToCompare.every(function (filterTag) {\n        return task.tags.includes(filterTag);\n      });\n      return dateMatches && statusMatches && tagsMatches;\n    }\n  }, {\n    key: "getTasksFromLocalStorage",\n    value: function () {\n      var _getTasksFromLocalStorage = store_asyncToGenerator( /*#__PURE__*/store_regeneratorRuntime().mark(function _callee2() {\n        var tasks;\n        return store_regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              tasks = localStorage.getItem(this.namespace);\n              return _context2.abrupt("return", tasks ? JSON.parse(tasks) : []);\n            case 2:\n            case "end":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function getTasksFromLocalStorage() {\n        return _getTasksFromLocalStorage.apply(this, arguments);\n      }\n      return getTasksFromLocalStorage;\n    }()\n  }, {\n    key: "setTask",\n    value: function () {\n      var _setTask = store_asyncToGenerator( /*#__PURE__*/store_regeneratorRuntime().mark(function _callee3(task) {\n        var savedTasks, taskIndex;\n        return store_regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return this.getTasks();\n            case 2:\n              savedTasks = _context3.sent;\n              taskIndex = savedTasks.findIndex(function (savedTask) {\n                return savedTask.id === task.id;\n              });\n              if (taskIndex > -1) {\n                savedTasks[taskIndex] = task;\n              } else {\n                savedTasks.push(task);\n              }\n              localStorage.setItem(this.namespace, JSON.stringify(savedTasks));\n            case 6:\n            case "end":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function setTask(_x2) {\n        return _setTask.apply(this, arguments);\n      }\n      return setTask;\n    }()\n  }, {\n    key: "deleteTask",\n    value: function () {\n      var _deleteTask = store_asyncToGenerator( /*#__PURE__*/store_regeneratorRuntime().mark(function _callee4(taskId) {\n        var savedTasks;\n        return store_regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return this.getTasks();\n            case 3:\n              savedTasks = _context4.sent;\n              savedTasks = savedTasks.filter(function (task) {\n                return task.id !== taskId;\n              });\n              localStorage.setItem(this.namespace, JSON.stringify(savedTasks));\n              return _context4.abrupt("return", true);\n            case 9:\n              _context4.prev = 9;\n              _context4.t0 = _context4["catch"](0);\n              console.error(\'Something went wrong\');\n              return _context4.abrupt("return", false);\n            case 13:\n            case "end":\n              return _context4.stop();\n          }\n        }, _callee4, this, [[0, 9]]);\n      }));\n      function deleteTask(_x3) {\n        return _deleteTask.apply(this, arguments);\n      }\n      return deleteTask;\n    }()\n  }]);\n  return WorkWithLocalStorage;\n}();\n;// CONCATENATED MODULE: ./src/modules/TaskTrackerUI.ts\nfunction TaskTrackerUI_typeof(o) { "@babel/helpers - typeof"; return TaskTrackerUI_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, TaskTrackerUI_typeof(o); }\nfunction TaskTrackerUI_regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ TaskTrackerUI_regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == TaskTrackerUI_typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator.return && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a \'" + n + "\' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(TaskTrackerUI_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }\nfunction TaskTrackerUI_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction TaskTrackerUI_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { TaskTrackerUI_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { TaskTrackerUI_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\nfunction TaskTrackerUI_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction TaskTrackerUI_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, TaskTrackerUI_toPropertyKey(descriptor.key), descriptor); } }\nfunction TaskTrackerUI_createClass(Constructor, protoProps, staticProps) { if (protoProps) TaskTrackerUI_defineProperties(Constructor.prototype, protoProps); if (staticProps) TaskTrackerUI_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction TaskTrackerUI_toPropertyKey(t) { var i = TaskTrackerUI_toPrimitive(t, "string"); return "symbol" == TaskTrackerUI_typeof(i) ? i : String(i); }\nfunction TaskTrackerUI_toPrimitive(t, r) { if ("object" != TaskTrackerUI_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != TaskTrackerUI_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }\nvar TaskTrackerUI = /*#__PURE__*/function () {\n  function TaskTrackerUI(taskTracker) {\n    TaskTrackerUI_classCallCheck(this, TaskTrackerUI);\n    this.taskTracker = taskTracker;\n    this.setEvents();\n  }\n  TaskTrackerUI_createClass(TaskTrackerUI, [{\n    key: "setEvents",\n    value: function () {\n      var _setEvents = TaskTrackerUI_asyncToGenerator( /*#__PURE__*/TaskTrackerUI_regeneratorRuntime().mark(function _callee3() {\n        var _document$getElementB,\n          _this = this,\n          _document$getElementB2;\n        return TaskTrackerUI_regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              (_document$getElementB = document.getElementById(\'add-update-task-btn\')) === null || _document$getElementB === void 0 || _document$getElementB.addEventListener(\'click\', /*#__PURE__*/TaskTrackerUI_asyncToGenerator( /*#__PURE__*/TaskTrackerUI_regeneratorRuntime().mark(function _callee() {\n                return TaskTrackerUI_regeneratorRuntime().wrap(function _callee$(_context) {\n                  while (1) switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.next = 2;\n                      return _this.addUpdateTask();\n                    case 2:\n                    case "end":\n                      return _context.stop();\n                  }\n                }, _callee);\n              })));\n              (_document$getElementB2 = document.getElementById(\'filterTasksBtn\')) === null || _document$getElementB2 === void 0 || _document$getElementB2.addEventListener(\'click\', /*#__PURE__*/TaskTrackerUI_asyncToGenerator( /*#__PURE__*/TaskTrackerUI_regeneratorRuntime().mark(function _callee2() {\n                return TaskTrackerUI_regeneratorRuntime().wrap(function _callee2$(_context2) {\n                  while (1) switch (_context2.prev = _context2.next) {\n                    case 0:\n                      _context2.next = 2;\n                      return _this.filterTasks();\n                    case 2:\n                    case "end":\n                      return _context2.stop();\n                  }\n                }, _callee2);\n              })));\n            case 2:\n            case "end":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n      function setEvents() {\n        return _setEvents.apply(this, arguments);\n      }\n      return setEvents;\n    }()\n  }, {\n    key: "addUpdateTask",\n    value: function () {\n      var _addUpdateTask = TaskTrackerUI_asyncToGenerator( /*#__PURE__*/TaskTrackerUI_regeneratorRuntime().mark(function _callee4() {\n        var taskDateInput, taskProgressSelect, taskTagsInput, taskTextInput, editingId, taskId, task;\n        return TaskTrackerUI_regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              taskDateInput = document.getElementById(\'taskDate\');\n              taskProgressSelect = document.getElementById(\'taskProgress\');\n              taskTagsInput = document.getElementById(\'taskTags\');\n              taskTextInput = document.getElementById(\'taskText\');\n              editingId = document.getElementById(\'add-update-task-btn\').dataset.editingId;\n              taskId = editingId || this.taskTracker.generateTaskId();\n              task = {\n                id: taskId,\n                text: taskTextInput.value,\n                date: taskDateInput.value,\n                status: taskProgressSelect.value,\n                tags: taskTagsInput.value.split(\',\').map(function (tag) {\n                  return tag.trim();\n                })\n              };\n              _context4.next = 9;\n              return this.taskTracker.saveTask(task);\n            case 9:\n              _context4.next = 11;\n              return this.clearInputs();\n            case 11:\n              _context4.next = 13;\n              return this.renderTasks();\n            case 13:\n            case "end":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function addUpdateTask() {\n        return _addUpdateTask.apply(this, arguments);\n      }\n      return addUpdateTask;\n    }()\n  }, {\n    key: "filterTasks",\n    value: function () {\n      var _filterTasks = TaskTrackerUI_asyncToGenerator( /*#__PURE__*/TaskTrackerUI_regeneratorRuntime().mark(function _callee5() {\n        var _this2 = this;\n        var filterDateElement, filterProgressElement, filterTagsElement, filter, tasks, filteredTasks;\n        return TaskTrackerUI_regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              filterDateElement = document.getElementById(\'filterDate\');\n              filterProgressElement = document.getElementById(\'filterProgress\');\n              filterTagsElement = document.getElementById(\'filterTags\');\n              filter = {\n                date: filterDateElement.value || undefined,\n                status: filterProgressElement.value || undefined,\n                tags: filterTagsElement.value ? filterTagsElement.value.split(\',\').map(function (tag) {\n                  return tag.trim();\n                }) : undefined\n              };\n              tasks = [];\n              _context5.next = 7;\n              return this.taskTracker.getSavedTasks();\n            case 7:\n              tasks = _context5.sent;\n              filteredTasks = tasks.filter(function (task) {\n                return _this2.taskTracker.taskFilter(task, filter);\n              });\n              _context5.next = 11;\n              return this.renderTasks(filteredTasks);\n            case 11:\n            case "end":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function filterTasks() {\n        return _filterTasks.apply(this, arguments);\n      }\n      return filterTasks;\n    }()\n  }, {\n    key: "deleteTask",\n    value: function () {\n      var _deleteTask = TaskTrackerUI_asyncToGenerator( /*#__PURE__*/TaskTrackerUI_regeneratorRuntime().mark(function _callee6(taskId) {\n        var isTaskDeleted;\n        return TaskTrackerUI_regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return this.taskTracker.deleteTask(taskId);\n            case 2:\n              isTaskDeleted = _context6.sent;\n              if (!isTaskDeleted) {\n                _context6.next = 6;\n                break;\n              }\n              _context6.next = 6;\n              return this.renderTasks();\n            case 6:\n            case "end":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function deleteTask(_x) {\n        return _deleteTask.apply(this, arguments);\n      }\n      return deleteTask;\n    }()\n  }, {\n    key: "renderTasks",\n    value: function () {\n      var _renderTasks = TaskTrackerUI_asyncToGenerator( /*#__PURE__*/TaskTrackerUI_regeneratorRuntime().mark(function _callee8(tasks) {\n        var _this3 = this;\n        var taskListEl, taskList;\n        return TaskTrackerUI_regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              taskListEl = document.getElementById(\'taskList\');\n              taskListEl.innerHTML = \'\';\n              _context8.t0 = tasks;\n              if (_context8.t0) {\n                _context8.next = 7;\n                break;\n              }\n              _context8.next = 6;\n              return this.taskTracker.getSavedTasks();\n            case 6:\n              _context8.t0 = _context8.sent;\n            case 7:\n              taskList = _context8.t0;\n              taskList.forEach(function (task) {\n                var taskListItem = document.createElement(\'li\');\n                taskListItem.classList.add(\'task-item-flex\');\n                var editTaskBtn = document.createElement(\'button\');\n                editTaskBtn.textContent = \'Edit\';\n                editTaskBtn.classList.add(\'edit-btn\');\n                editTaskBtn.addEventListener(\'click\', function () {\n                  return _this3.editTask(task.id);\n                });\n                var deleteTaskBtn = document.createElement(\'button\');\n                deleteTaskBtn.textContent = \'Delete\';\n                deleteTaskBtn.classList.add(\'delete-btn\');\n                deleteTaskBtn.addEventListener(\'click\', /*#__PURE__*/TaskTrackerUI_asyncToGenerator( /*#__PURE__*/TaskTrackerUI_regeneratorRuntime().mark(function _callee7() {\n                  return TaskTrackerUI_regeneratorRuntime().wrap(function _callee7$(_context7) {\n                    while (1) switch (_context7.prev = _context7.next) {\n                      case 0:\n                        _context7.next = 2;\n                        return _this3.deleteTask(task.id);\n                      case 2:\n                      case "end":\n                        return _context7.stop();\n                    }\n                  }, _callee7);\n                })));\n                var dateEl = document.createElement(\'span\');\n                dateEl.textContent = " Date: ".concat(task.date);\n                var progressEl = document.createElement(\'span\');\n                progressEl.textContent = "".concat(task.status);\n                var tagsEl = document.createElement(\'span\');\n                tagsEl.textContent = "Tags: ".concat(task.tags.join(\', \'));\n                taskListItem.appendChild(document.createTextNode(task.text));\n                taskListItem.appendChild(dateEl);\n                taskListItem.appendChild(progressEl);\n                taskListItem.appendChild(tagsEl);\n                taskListItem.appendChild(editTaskBtn);\n                taskListItem.appendChild(deleteTaskBtn);\n                taskListEl.appendChild(taskListItem);\n              });\n            case 9:\n            case "end":\n              return _context8.stop();\n          }\n        }, _callee8, this);\n      }));\n      function renderTasks(_x2) {\n        return _renderTasks.apply(this, arguments);\n      }\n      return renderTasks;\n    }()\n  }, {\n    key: "editTask",\n    value: function () {\n      var _editTask = TaskTrackerUI_asyncToGenerator( /*#__PURE__*/TaskTrackerUI_regeneratorRuntime().mark(function _callee9(taskId) {\n        var task;\n        return TaskTrackerUI_regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.next = 2;\n              return this.taskTracker.getTaskById(taskId);\n            case 2:\n              task = _context9.sent;\n              if (task) {\n                _context9.next = 5;\n                break;\n              }\n              return _context9.abrupt("return");\n            case 5:\n              document.getElementById(\'taskText\').value = task.text;\n              document.getElementById(\'taskDate\').value = task.date;\n              document.getElementById(\'taskProgress\').value = task.status;\n              document.getElementById(\'taskTags\').value = task.tags.join(\', \');\n              document.getElementById(\'add-update-task-btn\').dataset.editingId = task.id;\n            case 10:\n            case "end":\n              return _context9.stop();\n          }\n        }, _callee9, this);\n      }));\n      function editTask(_x3) {\n        return _editTask.apply(this, arguments);\n      }\n      return editTask;\n    }()\n  }, {\n    key: "clearInputs",\n    value: function () {\n      var _clearInputs = TaskTrackerUI_asyncToGenerator( /*#__PURE__*/TaskTrackerUI_regeneratorRuntime().mark(function _callee10() {\n        return TaskTrackerUI_regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              document.getElementById(\'taskDate\').value = \'\';\n              document.getElementById(\'taskProgress\').value = \'\';\n              document.getElementById(\'taskTags\').value = \'\';\n              document.getElementById(\'taskText\').value = \'\';\n              delete document.getElementById(\'add-update-task-btn\').dataset.editingId;\n            case 5:\n            case "end":\n              return _context10.stop();\n          }\n        }, _callee10);\n      }));\n      function clearInputs() {\n        return _clearInputs.apply(this, arguments);\n      }\n      return clearInputs;\n    }()\n  }]);\n  return TaskTrackerUI;\n}();\n;// CONCATENATED MODULE: ./src/modules/renderAppUI.ts\nfunction renderAppUI(rootEl) {\n  rootEl.innerHTML = "\\n  <main class=\\"main\\">\\n        <header>\\n          <h1>Task Calendar</h1>\\n        </header>\\n      <div class=\\"filters\\">\\n      <h2>Filters</h2>\\n        <input type=\\"date\\" id=\\"filterDate\\" />\\n        <select id=\\"filterProgress\\">\\n          <option value=\\"new\\">New</option>\\n          <option value=\\"in progress\\">In Progress</option>\\n          <option value=\\"done\\">Done</option>\\n        </select>\\n        <input\\n          type=\\"text\\"\\n          id=\\"filterTags\\"\\n          placeholder=\\"By tags\\"\\n        />\\n        <button class=\\"filters__btn\\" id=\\"filterTasksBtn\\">Filter tasks</button>\\n      </div>\\n      <div class=\\"task-form\\">\\n        \\n        <input type=\\"date\\" id=\\"taskDate\\" />\\n        <select id=\\"taskProgress\\">\\n          <option value=\\"new\\">New</option>\\n          <option value=\\"in progress\\">In Progress</option>\\n          <option value=\\"done\\">Done</option>\\n        </select>\\n        <input type=\\"text\\" id=\\"taskTags\\" placeholder=\\"Tags\\" />\\n        <input\\n          id=\\"taskText\\"\\n          class=\\"task-text\\"\\n          autofocus\\n          placeholder=\\"Enter your task\\"\\n          \\n          ></input>\\n        <button type=\\"submit\\" id=\\"add-update-task-btn\\">Add/Update Task</button>\\n      </div>\\n      <ul class=\\"task-list\\" id=\\"taskList\\"></ul>\\n    </div>\\n  </main>\\n  ";\n}\n;// CONCATENATED MODULE: ./src/modules/runApp.ts\n\n\n\n\nvar app = document.getElementById(\'app\');\nfunction runApp(appEl) {\n  renderAppUI(appEl);\n  var storage = new WorkWithLocalStorage(\'local_tasks\');\n  var taskTracker = new TaskTrackerAPI(storage);\n  var taskTrackerUI = new TaskTrackerUI(taskTracker);\n}\n;// CONCATENATED MODULE: ./src/index.ts\n\n\nvar src_app = document.getElementById(\'app\');\nrunApp(src_app);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///517\n')},783:function(module,__unused_webpack_exports,__webpack_require__){eval('\n\n/* eslint-env browser */\n/*\n  eslint-disable\n  no-console,\n  func-names\n*/\n\n/** @typedef {any} TODO */\n\nvar normalizeUrl = __webpack_require__(618);\nvar srcByModuleId = Object.create(null);\nvar noDocument = typeof document === "undefined";\nvar forEach = Array.prototype.forEach;\n\n/**\n * @param {function} fn\n * @param {number} time\n * @returns {(function(): void)|*}\n */\nfunction debounce(fn, time) {\n  var timeout = 0;\n  return function () {\n    // @ts-ignore\n    var self = this;\n    // eslint-disable-next-line prefer-rest-params\n    var args = arguments;\n    var functionCall = function functionCall() {\n      return fn.apply(self, args);\n    };\n    clearTimeout(timeout);\n\n    // @ts-ignore\n    timeout = setTimeout(functionCall, time);\n  };\n}\nfunction noop() {}\n\n/**\n * @param {TODO} moduleId\n * @returns {TODO}\n */\nfunction getCurrentScriptUrl(moduleId) {\n  var src = srcByModuleId[moduleId];\n  if (!src) {\n    if (document.currentScript) {\n      src = /** @type {HTMLScriptElement} */document.currentScript.src;\n    } else {\n      var scripts = document.getElementsByTagName("script");\n      var lastScriptTag = scripts[scripts.length - 1];\n      if (lastScriptTag) {\n        src = lastScriptTag.src;\n      }\n    }\n    srcByModuleId[moduleId] = src;\n  }\n\n  /**\n   * @param {string} fileMap\n   * @returns {null | string[]}\n   */\n  return function (fileMap) {\n    if (!src) {\n      return null;\n    }\n    var splitResult = src.split(/([^\\\\/]+)\\.js$/);\n    var filename = splitResult && splitResult[1];\n    if (!filename) {\n      return [src.replace(".js", ".css")];\n    }\n    if (!fileMap) {\n      return [src.replace(".js", ".css")];\n    }\n    return fileMap.split(",").map(function (mapRule) {\n      var reg = new RegExp("".concat(filename, "\\\\.js$"), "g");\n      return normalizeUrl(src.replace(reg, "".concat(mapRule.replace(/{fileName}/g, filename), ".css")));\n    });\n  };\n}\n\n/**\n * @param {TODO} el\n * @param {string} [url]\n */\nfunction updateCss(el, url) {\n  if (!url) {\n    if (!el.href) {\n      return;\n    }\n\n    // eslint-disable-next-line\n    url = el.href.split("?")[0];\n  }\n  if (!isUrlRequest( /** @type {string} */url)) {\n    return;\n  }\n  if (el.isLoaded === false) {\n    // We seem to be about to replace a css link that hasn\'t loaded yet.\n    // We\'re probably changing the same file more than once.\n    return;\n  }\n  if (!url || !(url.indexOf(".css") > -1)) {\n    return;\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  el.visited = true;\n  var newEl = el.cloneNode();\n  newEl.isLoaded = false;\n  newEl.addEventListener("load", function () {\n    if (newEl.isLoaded) {\n      return;\n    }\n    newEl.isLoaded = true;\n    el.parentNode.removeChild(el);\n  });\n  newEl.addEventListener("error", function () {\n    if (newEl.isLoaded) {\n      return;\n    }\n    newEl.isLoaded = true;\n    el.parentNode.removeChild(el);\n  });\n  newEl.href = "".concat(url, "?").concat(Date.now());\n  if (el.nextSibling) {\n    el.parentNode.insertBefore(newEl, el.nextSibling);\n  } else {\n    el.parentNode.appendChild(newEl);\n  }\n}\n\n/**\n * @param {string} href\n * @param {TODO} src\n * @returns {TODO}\n */\nfunction getReloadUrl(href, src) {\n  var ret;\n\n  // eslint-disable-next-line no-param-reassign\n  href = normalizeUrl(href);\n  src.some(\n  /**\n   * @param {string} url\n   */\n  // eslint-disable-next-line array-callback-return\n  function (url) {\n    if (href.indexOf(src) > -1) {\n      ret = url;\n    }\n  });\n  return ret;\n}\n\n/**\n * @param {string} [src]\n * @returns {boolean}\n */\nfunction reloadStyle(src) {\n  if (!src) {\n    return false;\n  }\n  var elements = document.querySelectorAll("link");\n  var loaded = false;\n  forEach.call(elements, function (el) {\n    if (!el.href) {\n      return;\n    }\n    var url = getReloadUrl(el.href, src);\n    if (!isUrlRequest(url)) {\n      return;\n    }\n    if (el.visited === true) {\n      return;\n    }\n    if (url) {\n      updateCss(el, url);\n      loaded = true;\n    }\n  });\n  return loaded;\n}\nfunction reloadAll() {\n  var elements = document.querySelectorAll("link");\n  forEach.call(elements, function (el) {\n    if (el.visited === true) {\n      return;\n    }\n    updateCss(el);\n  });\n}\n\n/**\n * @param {string} url\n * @returns {boolean}\n */\nfunction isUrlRequest(url) {\n  // An URL is not an request if\n\n  // It is not http or https\n  if (!/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.test(url)) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {TODO} moduleId\n * @param {TODO} options\n * @returns {TODO}\n */\nmodule.exports = function (moduleId, options) {\n  if (noDocument) {\n    console.log("no window.document found, will not HMR CSS");\n    return noop;\n  }\n  var getScriptSrc = getCurrentScriptUrl(moduleId);\n  function update() {\n    var src = getScriptSrc(options.filename);\n    var reloaded = reloadStyle(src);\n    if (options.locals) {\n      console.log("[HMR] Detected local css modules. Reload all css");\n      reloadAll();\n      return;\n    }\n    if (reloaded) {\n      console.log("[HMR] css reload %s", src.join(" "));\n    } else {\n      console.log("[HMR] Reload all css");\n      reloadAll();\n    }\n  }\n  return debounce(update, 50);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///783\n')},618:function(module){eval('\n\n/* eslint-disable */\n\n/**\n * @param {string[]} pathComponents\n * @returns {string}\n */\nfunction normalizeUrl(pathComponents) {\n  return pathComponents.reduce(function (accumulator, item) {\n    switch (item) {\n      case "..":\n        accumulator.pop();\n        break;\n      case ".":\n        break;\n      default:\n        accumulator.push(item);\n    }\n    return accumulator;\n  }, /** @type {string[]} */[]).join("/");\n}\n\n/**\n * @param {string} urlString\n * @returns {string}\n */\nmodule.exports = function (urlString) {\n  urlString = urlString.trim();\n  if (/^data:/i.test(urlString)) {\n    return urlString;\n  }\n  var protocol = urlString.indexOf("//") !== -1 ? urlString.split("//")[0] + "//" : "";\n  var components = urlString.replace(new RegExp(protocol, "i"), "").split("/");\n  var host = components[0].toLowerCase().replace(/\\.$/, "");\n  components[0] = "";\n  var path = normalizeUrl(components);\n  return protocol + host + path;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjE4LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViOztBQUVBO0FBQ0EsV0FBVyxVQUFVO0FBQ3JCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUcsYUFBYSxVQUFVO0FBQzFCOztBQUVBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Rhc2t0cmFja2VyYXBwLy4vbm9kZV9tb2R1bGVzL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2Rpc3QvaG1yL25vcm1hbGl6ZS11cmwuanM/ZDliNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyogZXNsaW50LWRpc2FibGUgKi9cblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ1tdfSBwYXRoQ29tcG9uZW50c1xuICogQHJldHVybnMge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gbm9ybWFsaXplVXJsKHBhdGhDb21wb25lbnRzKSB7XG4gIHJldHVybiBwYXRoQ29tcG9uZW50cy5yZWR1Y2UoZnVuY3Rpb24gKGFjY3VtdWxhdG9yLCBpdGVtKSB7XG4gICAgc3dpdGNoIChpdGVtKSB7XG4gICAgICBjYXNlIFwiLi5cIjpcbiAgICAgICAgYWNjdW11bGF0b3IucG9wKCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcIi5cIjpcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICBhY2N1bXVsYXRvci5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgICByZXR1cm4gYWNjdW11bGF0b3I7XG4gIH0sIC8qKiBAdHlwZSB7c3RyaW5nW119ICovW10pLmpvaW4oXCIvXCIpO1xufVxuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSB1cmxTdHJpbmdcbiAqIEByZXR1cm5zIHtzdHJpbmd9XG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHVybFN0cmluZykge1xuICB1cmxTdHJpbmcgPSB1cmxTdHJpbmcudHJpbSgpO1xuICBpZiAoL15kYXRhOi9pLnRlc3QodXJsU3RyaW5nKSkge1xuICAgIHJldHVybiB1cmxTdHJpbmc7XG4gIH1cbiAgdmFyIHByb3RvY29sID0gdXJsU3RyaW5nLmluZGV4T2YoXCIvL1wiKSAhPT0gLTEgPyB1cmxTdHJpbmcuc3BsaXQoXCIvL1wiKVswXSArIFwiLy9cIiA6IFwiXCI7XG4gIHZhciBjb21wb25lbnRzID0gdXJsU3RyaW5nLnJlcGxhY2UobmV3IFJlZ0V4cChwcm90b2NvbCwgXCJpXCIpLCBcIlwiKS5zcGxpdChcIi9cIik7XG4gIHZhciBob3N0ID0gY29tcG9uZW50c1swXS50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoL1xcLiQvLCBcIlwiKTtcbiAgY29tcG9uZW50c1swXSA9IFwiXCI7XG4gIHZhciBwYXRoID0gbm9ybWFsaXplVXJsKGNvbXBvbmVudHMpO1xuICByZXR1cm4gcHJvdG9jb2wgKyBob3N0ICsgcGF0aDtcbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///618\n')},713:function(module,__unused_webpack___webpack_exports__,__webpack_require__){eval('// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1703064180794\n      var cssReload = __webpack_require__(783)(module.id, {"locals":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzEzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ1U7QUFDVixPQUFPLElBQVU7QUFDakI7QUFDQSxzQkFBc0IsbUJBQU8sQ0FBQyxHQUE2RSxjQUFjLGVBQWU7QUFDeEksTUFBTSxVQUFVO0FBQ2hCLE1BQU0saUJBQWlCO0FBQ3ZCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YXNrdHJhY2tlcmFwcC8uL3NyYy9zdHlsZXMvaW5kZXguc2Nzcz83N2NkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9O1xuICAgIGlmKG1vZHVsZS5ob3QpIHtcbiAgICAgIC8vIDE3MDMwNjQxODA3OTRcbiAgICAgIHZhciBjc3NSZWxvYWQgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2Rpc3QvaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wibG9jYWxzXCI6ZmFsc2V9KTtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShjc3NSZWxvYWQpO1xuICAgICAgbW9kdWxlLmhvdC5hY2NlcHQodW5kZWZpbmVkLCBjc3NSZWxvYWQpO1xuICAgIH1cbiAgIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///713\n')}},__webpack_module_cache__={},inProgress,dataWebpackPrefix;function __webpack_require__(Q){var B=__webpack_module_cache__[Q];if(void 0!==B){if(void 0!==B.error)throw B.error;return B.exports}var F=__webpack_module_cache__[Q]={id:Q,exports:{}};try{var U={id:Q,module:F,factory:__webpack_modules__[Q],require:__webpack_require__};__webpack_require__.i.forEach((function(Q){Q(U)})),F=U.module,U.factory.call(F.exports,F,F.exports,U.require)}catch(Q){throw F.error=Q,Q}return F.exports}__webpack_require__.m=__webpack_modules__,__webpack_require__.c=__webpack_module_cache__,__webpack_require__.i=[],__webpack_require__.hu=function(Q){return Q+"."+__webpack_require__.h()+".hot-update.js"},__webpack_require__.miniCssF=function(Q){},__webpack_require__.miniCssF=function(Q){},__webpack_require__.hmrF=function(){return"main."+__webpack_require__.h()+".hot-update.json"},__webpack_require__.h=function(){return"df53a0fb7f9808029bdf"},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(Q){if("object"==typeof window)return window}}(),__webpack_require__.o=function(Q,B){return Object.prototype.hasOwnProperty.call(Q,B)},inProgress={},dataWebpackPrefix="tasktrackerapp:",__webpack_require__.l=function(Q,B,F,U){if(inProgress[Q])inProgress[Q].push(B);else{var e,t;if(void 0!==F)for(var s=document.getElementsByTagName("script"),n=0;n<s.length;n++){var E=s[n];if(E.getAttribute("src")==Q||E.getAttribute("data-webpack")==dataWebpackPrefix+F){e=E;break}}e||(t=!0,(e=document.createElement("script")).charset="utf-8",e.timeout=120,__webpack_require__.nc&&e.setAttribute("nonce",__webpack_require__.nc),e.setAttribute("data-webpack",dataWebpackPrefix+F),e.src=Q),inProgress[Q]=[B];var r=function(B,F){e.onerror=e.onload=null,clearTimeout(x);var U=inProgress[Q];if(delete inProgress[Q],e.parentNode&&e.parentNode.removeChild(e),U&&U.forEach((function(Q){return Q(F)})),B)return B(F)},x=setTimeout(r.bind(null,void 0,{type:"timeout",target:e}),12e4);e.onerror=r.bind(null,e.onerror),e.onload=r.bind(null,e.onload),t&&document.head.appendChild(e)}},function(){var Q,B,F,U={},e=__webpack_require__.c,t=[],s=[],n="idle",E=0,r=[];function x(Q){n=Q;for(var B=[],F=0;F<s.length;F++)B[F]=s[F].call(null,Q);return Promise.all(B)}function i(){0==--E&&x("ready").then((function(){if(0===E){var Q=r;r=[];for(var B=0;B<Q.length;B++)Q[B]()}}))}function a(Q){if("idle"!==n)throw new Error("check() is only allowed in idle status");return x("check").then(__webpack_require__.hmrM).then((function(F){return F?x("prepare").then((function(){var U=[];return B=[],Promise.all(Object.keys(__webpack_require__.hmrC).reduce((function(Q,e){return __webpack_require__.hmrC[e](F.c,F.r,F.m,Q,B,U),Q}),[])).then((function(){return B=function(){return Q?c(Q):x("ready").then((function(){return U}))},0===E?B():new Promise((function(Q){r.push((function(){Q(B())}))}));var B}))})):x(o()?"ready":"idle").then((function(){return null}))}))}function L(Q){return"ready"!==n?Promise.resolve().then((function(){throw new Error("apply() is only allowed in ready status (state: "+n+")")})):c(Q)}function c(Q){Q=Q||{},o();var U=B.map((function(B){return B(Q)}));B=void 0;var e=U.map((function(Q){return Q.error})).filter(Boolean);if(e.length>0)return x("abort").then((function(){throw e[0]}));var t=x("dispose");U.forEach((function(Q){Q.dispose&&Q.dispose()}));var s,n=x("apply"),E=function(Q){s||(s=Q)},r=[];return U.forEach((function(Q){if(Q.apply){var B=Q.apply(E);if(B)for(var F=0;F<B.length;F++)r.push(B[F])}})),Promise.all([t,n]).then((function(){return s?x("fail").then((function(){throw s})):F?c(Q).then((function(Q){return r.forEach((function(B){Q.indexOf(B)<0&&Q.push(B)})),Q})):x("idle").then((function(){return r}))}))}function o(){if(F)return B||(B=[]),Object.keys(__webpack_require__.hmrI).forEach((function(Q){F.forEach((function(F){__webpack_require__.hmrI[Q](F,B)}))})),F=void 0,!0}__webpack_require__.hmrD=U,__webpack_require__.i.push((function(r){var c,o,l,d,S=r.module,N=function(B,F){var U=e[F];if(!U)return B;var s=function(s){if(U.hot.active){if(e[s]){var n=e[s].parents;-1===n.indexOf(F)&&n.push(F)}else t=[F],Q=s;-1===U.children.indexOf(s)&&U.children.push(s)}else console.warn("[HMR] unexpected require("+s+") from disposed module "+F),t=[];return B(s)},r=function(Q){return{configurable:!0,enumerable:!0,get:function(){return B[Q]},set:function(F){B[Q]=F}}};for(var a in B)Object.prototype.hasOwnProperty.call(B,a)&&"e"!==a&&Object.defineProperty(s,a,r(a));return s.e=function(Q){return function(Q){switch(n){case"ready":x("prepare");case"prepare":return E++,Q.then(i,i),Q;default:return Q}}(B.e(Q))},s}(r.require,r.id);S.hot=(c=r.id,o=S,d={_acceptedDependencies:{},_acceptedErrorHandlers:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_selfInvalidated:!1,_disposeHandlers:[],_main:l=Q!==c,_requireSelf:function(){t=o.parents.slice(),Q=l?void 0:c,__webpack_require__(c)},active:!0,accept:function(Q,B,F){if(void 0===Q)d._selfAccepted=!0;else if("function"==typeof Q)d._selfAccepted=Q;else if("object"==typeof Q&&null!==Q)for(var U=0;U<Q.length;U++)d._acceptedDependencies[Q[U]]=B||function(){},d._acceptedErrorHandlers[Q[U]]=F;else d._acceptedDependencies[Q]=B||function(){},d._acceptedErrorHandlers[Q]=F},decline:function(Q){if(void 0===Q)d._selfDeclined=!0;else if("object"==typeof Q&&null!==Q)for(var B=0;B<Q.length;B++)d._declinedDependencies[Q[B]]=!0;else d._declinedDependencies[Q]=!0},dispose:function(Q){d._disposeHandlers.push(Q)},addDisposeHandler:function(Q){d._disposeHandlers.push(Q)},removeDisposeHandler:function(Q){var B=d._disposeHandlers.indexOf(Q);B>=0&&d._disposeHandlers.splice(B,1)},invalidate:function(){switch(this._selfInvalidated=!0,n){case"idle":B=[],Object.keys(__webpack_require__.hmrI).forEach((function(Q){__webpack_require__.hmrI[Q](c,B)})),x("ready");break;case"ready":Object.keys(__webpack_require__.hmrI).forEach((function(Q){__webpack_require__.hmrI[Q](c,B)}));break;case"prepare":case"check":case"dispose":case"apply":(F=F||[]).push(c)}},check:a,apply:L,status:function(Q){if(!Q)return n;s.push(Q)},addStatusHandler:function(Q){s.push(Q)},removeStatusHandler:function(Q){var B=s.indexOf(Q);B>=0&&s.splice(B,1)},data:U[c]},Q=void 0,d),S.parents=t,S.children=[],t=[],r.require=N})),__webpack_require__.hmrC={},__webpack_require__.hmrI={}}(),function(){var Q;__webpack_require__.g.importScripts&&(Q=__webpack_require__.g.location+"");var B=__webpack_require__.g.document;if(!Q&&B&&(B.currentScript&&(Q=B.currentScript.src),!Q)){var F=B.getElementsByTagName("script");if(F.length)for(var U=F.length-1;U>-1&&!Q;)Q=F[U--].src}if(!Q)throw new Error("Automatic publicPath is not supported in this browser");Q=Q.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),__webpack_require__.p=Q}(),function(){if("undefined"!=typeof document){var Q=[],B=[],F=function(F){return{dispose:function(){for(var B=0;B<Q.length;B++){var F=Q[B];F.parentNode&&F.parentNode.removeChild(F)}Q.length=0},apply:function(){for(var Q=0;Q<B.length;Q++)B[Q].rel="stylesheet";B.length=0}}};__webpack_require__.hmrC.miniCss=function(U,e,t,s,n,E){n.push(F),U.forEach((function(F){var U=__webpack_require__.miniCssF(F),e=__webpack_require__.p+U,t=function(Q,B){for(var F=document.getElementsByTagName("link"),U=0;U<F.length;U++){var e=(s=F[U]).getAttribute("data-href")||s.getAttribute("href");if("stylesheet"===s.rel&&(e===Q||e===B))return s}var t=document.getElementsByTagName("style");for(U=0;U<t.length;U++){var s;if((e=(s=t[U]).getAttribute("data-href"))===Q||e===B)return s}}(U,e);t&&s.push(new Promise((function(U,s){var n=function(Q,B,F,U,e){var t=document.createElement("link");return t.rel="stylesheet",t.type="text/css",t.onerror=t.onload=function(F){if(t.onerror=t.onload=null,"load"===F.type)U();else{var s=F&&("load"===F.type?"missing":F.type),n=F&&F.target&&F.target.href||B,E=new Error("Loading CSS chunk "+Q+" failed.\n("+n+")");E.code="CSS_CHUNK_LOAD_FAILED",E.type=s,E.request=n,t.parentNode&&t.parentNode.removeChild(t),e(E)}},t.href=B,F?F.parentNode.insertBefore(t,F.nextSibling):document.head.appendChild(t),t}(F,e,t,(function(){n.as="style",n.rel="preload",U()}),s);Q.push(t),B.push(n)})))}))}}}(),function(){if("undefined"!=typeof document){var Q=[],B=[],F=function(F){return{dispose:function(){for(var B=0;B<Q.length;B++){var F=Q[B];F.parentNode&&F.parentNode.removeChild(F)}Q.length=0},apply:function(){for(var Q=0;Q<B.length;Q++)B[Q].rel="stylesheet";B.length=0}}};__webpack_require__.hmrC.miniCss=function(U,e,t,s,n,E){n.push(F),U.forEach((function(F){var U=__webpack_require__.miniCssF(F),e=__webpack_require__.p+U,t=function(Q,B){for(var F=document.getElementsByTagName("link"),U=0;U<F.length;U++){var e=(s=F[U]).getAttribute("data-href")||s.getAttribute("href");if("stylesheet"===s.rel&&(e===Q||e===B))return s}var t=document.getElementsByTagName("style");for(U=0;U<t.length;U++){var s;if((e=(s=t[U]).getAttribute("data-href"))===Q||e===B)return s}}(U,e);t&&s.push(new Promise((function(U,s){var n=function(Q,B,F,U,e){var t=document.createElement("link");return t.rel="stylesheet",t.type="text/css",t.onerror=t.onload=function(F){if(t.onerror=t.onload=null,"load"===F.type)U();else{var s=F&&("load"===F.type?"missing":F.type),n=F&&F.target&&F.target.href||B,E=new Error("Loading CSS chunk "+Q+" failed.\n("+n+")");E.code="CSS_CHUNK_LOAD_FAILED",E.type=s,E.request=n,t.parentNode&&t.parentNode.removeChild(t),e(E)}},t.href=B,F?F.parentNode.insertBefore(t,F.nextSibling):document.head.appendChild(t),t}(F,e,t,(function(){n.as="style",n.rel="preload",U()}),s);Q.push(t),B.push(n)})))}))}}}(),function(){var Q,B,F,U,e,t=__webpack_require__.hmrS_jsonp=__webpack_require__.hmrS_jsonp||{179:0},s={};function n(B,F){return Q=F,new Promise((function(Q,F){s[B]=Q;var U=__webpack_require__.p+__webpack_require__.hu(B),e=new Error;__webpack_require__.l(U,(function(Q){if(s[B]){s[B]=void 0;var U=Q&&("load"===Q.type?"missing":Q.type),t=Q&&Q.target&&Q.target.src;e.message="Loading hot update chunk "+B+" failed.\n("+U+": "+t+")",e.name="ChunkLoadError",e.type=U,e.request=t,F(e)}}))}))}function E(Q){function s(Q){for(var B=[Q],F={},U=B.map((function(Q){return{chain:[Q],id:Q}}));U.length>0;){var e=U.pop(),t=e.id,s=e.chain,E=__webpack_require__.c[t];if(E&&(!E.hot._selfAccepted||E.hot._selfInvalidated)){if(E.hot._selfDeclined)return{type:"self-declined",chain:s,moduleId:t};if(E.hot._main)return{type:"unaccepted",chain:s,moduleId:t};for(var r=0;r<E.parents.length;r++){var x=E.parents[r],i=__webpack_require__.c[x];if(i){if(i.hot._declinedDependencies[t])return{type:"declined",chain:s.concat([x]),moduleId:t,parentId:x};-1===B.indexOf(x)&&(i.hot._acceptedDependencies[t]?(F[x]||(F[x]=[]),n(F[x],[t])):(delete F[x],B.push(x),U.push({chain:s.concat([x]),id:x})))}}}}return{type:"accepted",moduleId:Q,outdatedModules:B,outdatedDependencies:F}}function n(Q,B){for(var F=0;F<B.length;F++){var U=B[F];-1===Q.indexOf(U)&&Q.push(U)}}__webpack_require__.f&&delete __webpack_require__.f.jsonpHmr,B=void 0;var E={},r=[],x={},i=function(Q){console.warn("[HMR] unexpected require("+Q.id+") to disposed module")};for(var a in F)if(__webpack_require__.o(F,a)){var L,c=F[a],o=!1,l=!1,d=!1,S="";switch((L=c?s(a):{type:"disposed",moduleId:a}).chain&&(S="\nUpdate propagation: "+L.chain.join(" -> ")),L.type){case"self-declined":Q.onDeclined&&Q.onDeclined(L),Q.ignoreDeclined||(o=new Error("Aborted because of self decline: "+L.moduleId+S));break;case"declined":Q.onDeclined&&Q.onDeclined(L),Q.ignoreDeclined||(o=new Error("Aborted because of declined dependency: "+L.moduleId+" in "+L.parentId+S));break;case"unaccepted":Q.onUnaccepted&&Q.onUnaccepted(L),Q.ignoreUnaccepted||(o=new Error("Aborted because "+a+" is not accepted"+S));break;case"accepted":Q.onAccepted&&Q.onAccepted(L),l=!0;break;case"disposed":Q.onDisposed&&Q.onDisposed(L),d=!0;break;default:throw new Error("Unexception type "+L.type)}if(o)return{error:o};if(l)for(a in x[a]=c,n(r,L.outdatedModules),L.outdatedDependencies)__webpack_require__.o(L.outdatedDependencies,a)&&(E[a]||(E[a]=[]),n(E[a],L.outdatedDependencies[a]));d&&(n(r,[L.moduleId]),x[a]=i)}F=void 0;for(var N,u=[],I=0;I<r.length;I++){var R=r[I],C=__webpack_require__.c[R];C&&(C.hot._selfAccepted||C.hot._main)&&x[R]!==i&&!C.hot._selfInvalidated&&u.push({module:R,require:C.hot._requireSelf,errorHandler:C.hot._selfAccepted})}return{dispose:function(){var Q;U.forEach((function(Q){delete t[Q]})),U=void 0;for(var B,F=r.slice();F.length>0;){var e=F.pop(),s=__webpack_require__.c[e];if(s){var n={},x=s.hot._disposeHandlers;for(I=0;I<x.length;I++)x[I].call(null,n);for(__webpack_require__.hmrD[e]=n,s.hot.active=!1,delete __webpack_require__.c[e],delete E[e],I=0;I<s.children.length;I++){var i=__webpack_require__.c[s.children[I]];i&&(Q=i.parents.indexOf(e))>=0&&i.parents.splice(Q,1)}}}for(var a in E)if(__webpack_require__.o(E,a)&&(s=__webpack_require__.c[a]))for(N=E[a],I=0;I<N.length;I++)B=N[I],(Q=s.children.indexOf(B))>=0&&s.children.splice(Q,1)},apply:function(B){for(var F in x)__webpack_require__.o(x,F)&&(__webpack_require__.m[F]=x[F]);for(var U=0;U<e.length;U++)e[U](__webpack_require__);for(var t in E)if(__webpack_require__.o(E,t)){var s=__webpack_require__.c[t];if(s){N=E[t];for(var n=[],i=[],a=[],L=0;L<N.length;L++){var c=N[L],o=s.hot._acceptedDependencies[c],l=s.hot._acceptedErrorHandlers[c];if(o){if(-1!==n.indexOf(o))continue;n.push(o),i.push(l),a.push(c)}}for(var d=0;d<n.length;d++)try{n[d].call(null,N)}catch(F){if("function"==typeof i[d])try{i[d](F,{moduleId:t,dependencyId:a[d]})}catch(U){Q.onErrored&&Q.onErrored({type:"accept-error-handler-errored",moduleId:t,dependencyId:a[d],error:U,originalError:F}),Q.ignoreErrored||(B(U),B(F))}else Q.onErrored&&Q.onErrored({type:"accept-errored",moduleId:t,dependencyId:a[d],error:F}),Q.ignoreErrored||B(F)}}}for(var S=0;S<u.length;S++){var I=u[S],R=I.module;try{I.require(R)}catch(F){if("function"==typeof I.errorHandler)try{I.errorHandler(F,{moduleId:R,module:__webpack_require__.c[R]})}catch(U){Q.onErrored&&Q.onErrored({type:"self-accept-error-handler-errored",moduleId:R,error:U,originalError:F}),Q.ignoreErrored||(B(U),B(F))}else Q.onErrored&&Q.onErrored({type:"self-accept-errored",moduleId:R,error:F}),Q.ignoreErrored||B(F)}}return r}}}self.webpackHotUpdatetasktrackerapp=function(B,U,t){for(var n in U)__webpack_require__.o(U,n)&&(F[n]=U[n],Q&&Q.push(n));t&&e.push(t),s[B]&&(s[B](),s[B]=void 0)},__webpack_require__.hmrI.jsonp=function(Q,B){F||(F={},e=[],U=[],B.push(E)),__webpack_require__.o(F,Q)||(F[Q]=__webpack_require__.m[Q])},__webpack_require__.hmrC.jsonp=function(Q,s,r,x,i,a){i.push(E),B={},U=s,F=r.reduce((function(Q,B){return Q[B]=!1,Q}),{}),e=[],Q.forEach((function(Q){__webpack_require__.o(t,Q)&&void 0!==t[Q]?(x.push(n(Q,a)),B[Q]=!0):B[Q]=!1})),__webpack_require__.f&&(__webpack_require__.f.jsonpHmr=function(Q,F){B&&__webpack_require__.o(B,Q)&&!B[Q]&&(F.push(n(Q)),B[Q]=!0)})},__webpack_require__.hmrM=function(){if("undefined"==typeof fetch)throw new Error("No browser support: need fetch API");return fetch(__webpack_require__.p+__webpack_require__.hmrF()).then((function(Q){if(404!==Q.status){if(!Q.ok)throw new Error("Failed to fetch update manifest "+Q.statusText);return Q.json()}}))}}();var __webpack_exports__=__webpack_require__(517)})();